(letrec ((n 5)
         (fac (lambda (n) (* n (fac (- n 1))))))
  (fac n))

((lambda (n fac) (fac fac n))
 5
 (lambda (fac n) (* n (fac fac (- n 1)))))






(letrec ((even? (lambda (n) (if (= n 0) 'true (odd? (- n 1)))))
         (odd? (lambda (n) (if (= n 0) 'false (even? (- n 1))))))
  (even? 5))


((lambda (even? odd?) (even? even? odd? 5))
 (lambda (even? odd? n) (if (= n 0) 'true (odd? even? odd? (- n 1))))
 (lambda (even? odd? n) (if (= n 0) 'false (even? even? odd? (- n 1)))))
